name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  secrets_scanning:
    name: Secrets Scanning with TruffleHog and GitGuardian
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@v3.83.3
      continue-on-error: false

    - name: GitGuardian scan
      uses: GitGuardian/ggshield/actions/secret@v1.33.0
      env:
        GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
        GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
        GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
        GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
      continue-on-error: false

  sast_scan:
    name: SAST Scanning with Semgrep
    runs-on: ubuntu-latest
    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep
    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v4
      - run: semgrep ci
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        continue-on-error: false

  sca_scan:
    name: SCA Scanning with Snyk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        env:
          COMMAND: "pip install --upgrade pip -r requirements.txt"
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test --file=requirements.txt --severity-threshold=low
        continue-on-error: false

  container_scan:
    name: Container Scanning with Docker Scout
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build a Docker image
        run: docker build -f Dockerfile -t flyin/taskflaw-prebuild .
      - name: Docker Scout Scan
        uses: docker/scout-action@v1
        with:
          dockerhub-user: ${{ vars.DOCKER_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKERHUB_TOKEN }}
          command: quickview,cves,recommendations
          # fail the build if any critical or high severity vulnerabilities are found
          only-severities: critical,high
          exit-code: true
        continue-on-error: false

  build:
    name: Build and push to Docker Hub
    runs-on: ubuntu-latest
    needs: [secrets_scanning, sast_scan, sca_scan, container_scan]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}"
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest